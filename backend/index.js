import express from 'express';
import cors from 'cors';
import dotenv from 'dotenv';
import { OpenAI } from 'openai';
import path from 'path';

dotenv.config();

const app = express();

// CORS ayarlarÄ±nÄ± geniÅŸlet - tÃ¼m domainlerden eriÅŸime izin ver
app.use(cors({
  origin: [
    'https://maniwebst.com',
    'https://www.maniwebst.com',
    'https://maniwebst.vercel.app',
    'http://localhost:3000',
    'http://localhost:5000',
    'http://127.0.0.1:5500',
    'http://127.0.0.1:3000',
    'https://*.vercel.app',
    'https://*.railway.app',
    'https://*.render.com'
  ],
  credentials: true,
  methods: ['GET', 'POST', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization']
}));

app.use(express.json());

// Statik dosyalar iÃ§in - frontend'i servis et
app.use(express.static(path.join(process.cwd(), '..')));

// Health check endpoint
app.get('/health', (req, res) => {
  res.json({
    status: 'OK',
    message: 'Backend is running',
    timestamp: new Date().toISOString(),
    environment: process.env.NODE_ENV || 'development',
    apiKeyExists: !!process.env.OPENAI_API_KEY
  });
});

// OpenAI client'Ä± sadece API key varsa oluÅŸtur
let openai = null;
if (process.env.OPENAI_API_KEY && process.env.OPENAI_API_KEY !== 'sk-test-key-for-development') {
  openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
}

app.post('/api/manifest', async (req, res) => {
  console.log('API isteÄŸi geldi:', req.body);
  const { manifest } = req.body;
  
  if (!manifest || manifest.trim().length === 0) {
    return res.status(400).json({ error: 'Manifest metni boÅŸ olamaz.' });
  }
  
  console.log('KullanÄ±cÄ± manifesti:', manifest);
  console.log('API Key mevcut:', process.env.OPENAI_API_KEY ? 'Evet' : 'HayÄ±r');
  
  // EÄŸer OpenAI API key yoksa veya test key ise fallback yanÄ±t ver
  if (!openai) {
    console.log('OpenAI API key bulunamadÄ± veya test key, fallback yanÄ±t veriliyor...');
    const fallbackResponse = `Bu harika, zaten bu gerÃ§ekliÄŸe doÄŸru Ã§ekiliyorsun! âœ¨

Åžu an bu hayalin iÃ§indesin, hisset. "${manifest}" - bu energia seninle uyum iÃ§inde Ã§alÄ±ÅŸÄ±yor. 

Manifesto enerjin Ã§alÄ±ÅŸtÄ± bile, kendini olmuÅŸ gibi hisset. Bu gerÃ§eklik artÄ±k senin yaÅŸam alanÄ±nda var. Her nefes alÄ±ÅŸÄ±nda bu hayal daha da gÃ¼Ã§leniyor, evren senin bu niyetini duyuyor ve gerÃ§ekleÅŸtiriyor.

Bu deneyimi yaÅŸarken kendini nasÄ±l hissediyorsun? Bu gerÃ§ekliÄŸin tadÄ±nÄ± Ã§Ä±kar, Ã§Ã¼nkÃ¼ bu artÄ±k senin yaÅŸamÄ±nÄ±n bir parÃ§asÄ±.

TÃ¼m bunlar gerÃ§ek olmuÅŸ olsaydÄ±, gÃ¼nlÃ¼ÄŸÃ¼ne nasÄ±l yazardÄ±n? ðŸ“–`;

    return res.json({ response: fallbackResponse });
  }
  
  try {
    console.log('OpenAI API\'ye istek gÃ¶nderiliyor...');
    const prompt = `Sen spiritÃ¼el bir manifest koÃ§usun. KullanÄ±cÄ±nÄ±n yazdÄ±ÄŸÄ± hayali gerÃ§ekleÅŸmiÅŸ gibi kabul et ve ona Ã§ok detaylÄ±, spiritÃ¼el ve motive edici bir yanÄ±t ver.

KullanÄ±cÄ±nÄ±n manifesti: "${manifest}"

YanÄ±tÄ±n ÅŸu Ã¶zelliklerde olmalÄ±:
1. "Bu harika, zaten bu gerÃ§ekliÄŸe doÄŸru Ã§ekiliyorsun" tarzÄ±nda baÅŸla
2. KullanÄ±cÄ±nÄ±n bahsettiÄŸi konuyu Ã§ok detaylÄ± ele al
3. Bu hayalin gerÃ§ekleÅŸtiÄŸi dÃ¼nyayÄ± betimle
4. KullanÄ±cÄ±nÄ±n hissettiÄŸi duygularÄ± ve deneyimleri detaylandÄ±r
5. "Åžu an bu hayalin iÃ§indesin, hisset. Seninle uyum iÃ§inde" gibi cÃ¼mleler ekle
6. "Manifesto enerjin Ã§alÄ±ÅŸtÄ± bile, kendini olmuÅŸ gibi hisset.âœ¨" tarzÄ±nda devam et
7. Bu gerÃ§ekliÄŸin nasÄ±l hissettirdiÄŸini detaylÄ± anlat
8. En sonunda mutlaka ÅŸu soruyu sor: "TÃ¼m bunlar gerÃ§ek olmuÅŸ olsaydÄ±, gÃ¼nlÃ¼ÄŸÃ¼ne nasÄ±l yazardÄ±n?"

YanÄ±tÄ±n 4-5 paragraf uzunluÄŸunda olsun, Ã§ok detaylÄ± ve betimleyici olsun. KullanÄ±cÄ±yÄ± bu gerÃ§ekliÄŸin iÃ§ine Ã§eksin. Emoji kullan ama abartma.`;

    const completion = await openai.chat.completions.create({
      model: 'gpt-3.5-turbo',
      messages: [
        { 
          role: 'system', 
          content: 'Sen spiritÃ¼el bir manifest koÃ§usun. KullanÄ±cÄ±nÄ±n hayallerini gerÃ§ekleÅŸmiÅŸ gibi kabul eder ve onu Ã§ok detaylÄ±, motive edici, spiritÃ¼el bir dille yanÄ±tlarsÄ±n. KullanÄ±cÄ±nÄ±n bahsettiÄŸi konuyu derinlemesine ele alÄ±r ve o gerÃ§ekliÄŸi yaÅŸatÄ±rsÄ±n.' 
        },
        { role: 'user', content: prompt }
      ],
      max_tokens: 800,
      temperature: 0.8
    });
    
    console.log('OpenAI cevabÄ± alÄ±ndÄ±:', completion.choices[0].message.content);
    res.json({ response: completion.choices[0].message.content });
  } catch (err) {
    console.error('HATA OLUÅžTU:', err.message);
    console.error('Hata detayÄ±:', err);
    
    // Fallback response if API fails
    const fallbackResponse = `Bu harika, zaten bu gerÃ§ekliÄŸe doÄŸru Ã§ekiliyorsun! âœ¨

Åžu an bu hayalin iÃ§indesin, hisset. "${manifest}" - bu energia seninle uyum iÃ§inde Ã§alÄ±ÅŸÄ±yor. 

Manifesto enerjin Ã§alÄ±ÅŸtÄ± bile, kendini olmuÅŸ gibi hisset. Bu gerÃ§eklik artÄ±k senin yaÅŸam alanÄ±nda var. Her nefes alÄ±ÅŸÄ±nda bu hayal daha da gÃ¼Ã§leniyor, evren senin bu niyetini duyuyor ve gerÃ§ekleÅŸtiriyor.

Bu deneyimi yaÅŸarken kendini nasÄ±l hissediyorsun? Bu gerÃ§ekliÄŸin tadÄ±nÄ± Ã§Ä±kar, Ã§Ã¼nkÃ¼ bu artÄ±k senin yaÅŸamÄ±nÄ±n bir parÃ§asÄ±.

TÃ¼m bunlar gerÃ§ek olmuÅŸ olsaydÄ±, gÃ¼nlÃ¼ÄŸÃ¼ne nasÄ±l yazardÄ±n? ðŸ“–`;

    res.json({ response: fallbackResponse });
  }
});

// 404 handler
app.use((req, res) => {
  res.status(404).json({ error: 'Endpoint bulunamadÄ±' });
});

// Error handler
app.use((err, req, res, next) => {
  console.error('Genel hata:', err);
  res.status(500).json({ error: 'Sunucu hatasÄ± oluÅŸtu.' });
});

const PORT = process.env.PORT || 3002;
const HOST = process.env.HOST || '0.0.0.0'; // TÃ¼m IP'lerden eriÅŸime izin ver

app.listen(PORT, HOST, () => {
  console.log(`Backend Ã§alÄ±ÅŸÄ±yor: http://${HOST}:${PORT}`);
  console.log('Frontend: http://localhost:3002');
  console.log('API endpoint: http://localhost:3002/api/manifest');
  console.log('CORS aktif');
  console.log('OpenAI API anahtarÄ± yÃ¼klendi:', process.env.OPENAI_API_KEY ? 'Evet' : 'HayÄ±r');
  console.log('Environment:', process.env.NODE_ENV || 'development');
});